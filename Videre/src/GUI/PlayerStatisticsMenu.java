/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PlayerStatisticsMenu.java
 *
 * Created on Apr 9, 2012, 8:12:27 PM
 */

package GUI;

import Analise.PlayerManager;
import Analise.PlayerStatisticsBoxplot;
import Analise.PlayerStatisticsFrequencyGameUsage;
import Analise.PlayerStatisticsFrequencyPerformance;
import Analise.PlayerStatisticsLine;
import Analise.PlayerStatisticsScatterPlot;
import java.awt.Frame;
import javax.swing.JFrame;
import javax.swing.WindowConstants;

/**
 *
 * @author diogo
 */
public class PlayerStatisticsMenu extends javax.swing.JFrame {

	// <editor-fold defaultstate="collapsed" desc="Singleton">
	private static PlayerStatisticsMenu instance;

	public static PlayerStatisticsMenu GetInsance() {
		if (instance == null) {
			instance = new PlayerStatisticsMenu();
		}
		return instance;
	}
	// </editor-fold>

    /** Creates new form PlayerStatisticsMenu */
    public PlayerStatisticsMenu() {
        initComponents();
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBoxplotGames = new javax.swing.JButton();
        btnBoxplotDate = new javax.swing.JButton();
        btnBoxplotPlayers = new javax.swing.JButton();
        btnScatterPlotGroup = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnLearningCurve = new javax.swing.JButton();
        btnPlayerPerformance = new javax.swing.JButton();
        btnGameUsage = new javax.swing.JButton();
        btnScatterPlotSolo = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estatísticas Coletivas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 30))); // NOI18N

        btnBoxplotGames.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnBoxplotGames.setText("Boxplot - Jogos");
        btnBoxplotGames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBoxplotGamesActionPerformed(evt);
            }
        });

        btnBoxplotDate.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnBoxplotDate.setText("Boxplot - Datas");
        btnBoxplotDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBoxplotDateActionPerformed(evt);
            }
        });

        btnBoxplotPlayers.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnBoxplotPlayers.setText("Boxplot - Jogadores");
        btnBoxplotPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBoxplotPlayersActionPerformed(evt);
            }
        });

        btnScatterPlotGroup.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnScatterPlotGroup.setText("Histograma");
        btnScatterPlotGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScatterPlotGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBoxplotGames, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
            .addComponent(btnBoxplotDate, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
            .addComponent(btnBoxplotPlayers, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
            .addComponent(btnScatterPlotGroup, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnBoxplotGames)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBoxplotDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBoxplotPlayers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnScatterPlotGroup)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estatísticas Individuais", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 30))); // NOI18N
        jPanel2.setMaximumSize(new java.awt.Dimension(378, 402));
        jPanel2.setPreferredSize(new java.awt.Dimension(366, 279));

        btnLearningCurve.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnLearningCurve.setText("Linha de Aprendizado");
        btnLearningCurve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLearningCurveActionPerformed(evt);
            }
        });

        btnPlayerPerformance.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnPlayerPerformance.setText("Desempenho em Jogos");
        btnPlayerPerformance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayerPerformanceActionPerformed(evt);
            }
        });

        btnGameUsage.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnGameUsage.setText("Usagem de Jogo");
        btnGameUsage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGameUsageActionPerformed(evt);
            }
        });

        btnScatterPlotSolo.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnScatterPlotSolo.setText("Histograma");
        btnScatterPlotSolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScatterPlotSoloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLearningCurve, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
            .addComponent(btnPlayerPerformance, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
            .addComponent(btnGameUsage, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
            .addComponent(btnScatterPlotSolo, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnLearningCurve)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPlayerPerformance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGameUsage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnScatterPlotSolo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnClose.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnClose.setText("Fechar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void btnBoxplotGamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBoxplotGamesActionPerformed
		// TODO add your handling code here:
		OnClickBoxplotPlayers();
		
}//GEN-LAST:event_btnBoxplotGamesActionPerformed

	private void btnBoxplotDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBoxplotDateActionPerformed
		// TODO add your handling code here:
		OnClickBoxplotDates();
	}//GEN-LAST:event_btnBoxplotDateActionPerformed

	private void btnBoxplotPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBoxplotPlayersActionPerformed
		// TODO add your handling code here:
		OnClickBoxplotGames();
	}//GEN-LAST:event_btnBoxplotPlayersActionPerformed

	private void btnLearningCurveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLearningCurveActionPerformed
		// TODO add your handling code here:
		OnClickLearningCurve();
	}//GEN-LAST:event_btnLearningCurveActionPerformed

	private void btnPlayerPerformanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayerPerformanceActionPerformed
		// TODO add your handling code here:
		OnClickPlayerPerformance();
	}//GEN-LAST:event_btnPlayerPerformanceActionPerformed

	private void btnGameUsageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGameUsageActionPerformed
		// TODO add your handling code here:
		OnClickGameUsage();
	}//GEN-LAST:event_btnGameUsageActionPerformed

	private void btnScatterPlotSoloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScatterPlotSoloActionPerformed
		// TODO add your handling code here:
		OnClickScatterPlotSolo();
	}//GEN-LAST:event_btnScatterPlotSoloActionPerformed

	private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
		// TODO add your handling code here:
		this.dispose();
	}//GEN-LAST:event_btnCloseActionPerformed

	private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
		// TODO add your handling code here:
		OnClose();
	}//GEN-LAST:event_formWindowClosed

	private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
		// TODO add your handling code here:
	}//GEN-LAST:event_formWindowDeactivated

	private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		// TODO add your handling code here:
		OnClose();
	}//GEN-LAST:event_formWindowClosing

	private void btnScatterPlotGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScatterPlotGroupActionPerformed
		// TODO add your handling code here:
		OnClickScatterPlotGroup();
	}//GEN-LAST:event_btnScatterPlotGroupActionPerformed

//    /**
//    * @param args the command line arguments
//    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PlayerStatisticsMenu().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBoxplotDate;
    private javax.swing.JButton btnBoxplotGames;
    private javax.swing.JButton btnBoxplotPlayers;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnGameUsage;
    private javax.swing.JButton btnLearningCurve;
    private javax.swing.JButton btnPlayerPerformance;
    private javax.swing.JButton btnScatterPlotGroup;
    private javax.swing.JButton btnScatterPlotSolo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

	public JFrame previousMenu;

	///////////////////
	/// Individual Statistics
	///////////////////

	protected void OnClickLearningCurve() {
		PlayerStatisticsLine psl = new PlayerStatisticsLine();
		psl.SetPlayerDatas(PlayerManager.GetInstance().GetCurrentPlayerData());

		Class<?>[] types = OpenPopupGetGameTypes(psl.GetTypes());

		if (types == null) {
			return;
		}

		// selected all?
		if (types.length == psl.GetTypes().length) {
			// yes.
			psl.ShowAllStatistics();
		}
		else {
			// no, then open 1 by 1.
			for (Class<?> gameType : types) {
				psl.ShowStatisticsFor(gameType);
			}
		}
	}

	protected void OnClickPlayerPerformance() {
		PlayerStatisticsFrequencyPerformance psf = new PlayerStatisticsFrequencyPerformance();
		psf.SetPlayerDatas(PlayerManager.GetInstance().GetAllPlayerDatas());

		Class<?>[] types = OpenPopupGetGameTypes(psf.GetTypes());

		if (types == null) {
			return;
		}
		
		for (Class<?> gameType : types) {
			psf.ShowPlayerPerformance(gameType);
		}

	}

	protected void OnClickGameUsage() {
		PlayerStatisticsFrequencyGameUsage psf = new PlayerStatisticsFrequencyGameUsage();
//		PlayerStatisticsFrequency psf = new PlayerStatisticsFrequency();
		psf.SetPlayerDatas(PlayerManager.GetInstance().GetAllPlayerDatas());

		int iDaysInterval = OpenPopupGetDay(new int[]{
			0, 7, 14, 30, 60, 90
		});


		if (iDaysInterval >= 0) {
			psf.ShowGraphic(iDaysInterval);
		}
		
//		SelectGameMenu selectGam = new SelectGameMenu(this, true);
//		selectGam.SetAvailableOptions(psf.GetTypes());
//
//
//		selectGam.setVisible(true);
		
				
	}

	protected void OnClickScatterPlotSolo() {
		PlayerStatisticsScatterPlot pssp = new PlayerStatisticsScatterPlot();
		pssp.SetPlayerDatas(PlayerManager.GetInstance().GetCurrentPlayerData());
		pssp.ShowIndividualScores();
	}


	///////////////////
	/// People Statistics
	///////////////////


	
	protected void OnClickBoxplotPlayers(){
		GetBoxplotGraphic().ShowPlayerStatistics();
	}

	protected void OnClickBoxplotDates() {
		GetBoxplotGraphic().ShowDateStatistics(1);
		
	}

	protected void OnClickBoxplotGames() {
		GetBoxplotGraphic().ShowGameStatistics();
	}

	protected void OnClickScatterPlotGroup() {
		PlayerStatisticsScatterPlot pssp = new PlayerStatisticsScatterPlot();
		pssp.SetPlayerDatas(PlayerManager.GetInstance().GetAllPlayerDatas());
		pssp.ShowGeneralScores();
	}

	protected PlayerStatisticsBoxplot GetBoxplotGraphic() {
		PlayerStatisticsBoxplot psb = new PlayerStatisticsBoxplot();
		psb.SetPlayerDatas(PlayerManager.GetInstance().GetAllPlayerDatas());
		return psb;
	}


	///////////////////
	/// Util
	///////////////////

	/**
	 * open popup for the user to select some game types.
	 * @return
	 */
	protected Class<?>[] OpenPopupGetGameTypes(Class<?>[] options) {

		// create select types menu..
		SelectGameMenu selectGameMenu = new SelectGameMenu(this, true);
		selectGameMenu.SetAvailableOptions(options);

		// open..
		selectGameMenu.setVisible(true);

		if (selectGameMenu.getReturnStatus() == SelectGameMenu.RET_OK) {
			// get result.
			return selectGameMenu.GetSelectedValues();
		}
		else {
			return null;
		}
	}

	/**
	 * open popup for the user to select some game types.
	 * @return
	 */
	protected int OpenPopupGetDay(int[] vDays) {

		// create select types menu..
		SelectDayAmountMenu selectDayMenu = new SelectDayAmountMenu(this, true);
		selectDayMenu.SetAvailableOptions(vDays);
		selectDayMenu.setLocationRelativeTo(this);

		// open..
		selectDayMenu.setVisible(true);

		if (selectDayMenu.getReturnStatus() == SelectDayAmountMenu.RET_OK) {
			// get result.
			return selectDayMenu.GetSelectedDayAmount();
		} else {
			return -1;
		}
	}

	///////////////////
	/// Window Events
	///////////////////

	protected void OnClose(){
		if (previousMenu != null) {
			previousMenu.setState(Frame.NORMAL);
			previousMenu.toFront();
		}
	}


}
