/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SelectDayAmountMenu.java
 *
 * Created on Apr 13, 2012, 9:04:46 PM
 */

package GUI;

/**
 *
 * @author diogo
 */
public class SelectDayAmountMenu extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    /** Creates new form SelectDayAmountMenu */
    public SelectDayAmountMenu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

		UpdateControlState();
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        comboDate = new javax.swing.JComboBox();
        radioPredefinedDate = new javax.swing.JRadioButton();
        radioCustomDate = new javax.swing.JRadioButton();
        txtCustomDate = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        okButton.setText("Confirmar");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        comboDate.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N

        buttonGroup1.add(radioPredefinedDate);
        radioPredefinedDate.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        radioPredefinedDate.setText("Selecionar Data");
        radioPredefinedDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPredefinedDateActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioCustomDate);
        radioCustomDate.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        radioCustomDate.setText("Data Customisada");
        radioCustomDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCustomDateActionPerformed(evt);
            }
        });

        txtCustomDate.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        txtCustomDate.setText("14");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioPredefinedDate)
                    .addComponent(comboDate, 0, 399, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioCustomDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCustomDate, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioPredefinedDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioCustomDate)
                    .addComponent(txtCustomDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

	private void radioPredefinedDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPredefinedDateActionPerformed
		// TODO add your handling code here:
		UpdateControlState();
	}//GEN-LAST:event_radioPredefinedDateActionPerformed

	private void radioCustomDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCustomDateActionPerformed
		// TODO add your handling code here:
		UpdateControlState();
	}//GEN-LAST:event_radioCustomDateActionPerformed

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
	

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox comboDate;
    private javax.swing.JButton okButton;
    private javax.swing.JRadioButton radioCustomDate;
    private javax.swing.JRadioButton radioPredefinedDate;
    private javax.swing.JTextField txtCustomDate;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;

	private  int[] vDaysValues;

	public void SetAvailableOptions(int[] vDays) {
		vDaysValues = vDays;
		

		for (int iDay : vDays) {
			if (iDay == 0) {
				comboDate.addItem("Desde o Início"); // thistextlokaki
			}
			else {
				comboDate.addItem(iDay + " Dias Atrás"); // thistextlokaki
			}
		}

	}

	public int GetSelectedDayAmount() {

		if (radioPredefinedDate.isSelected()) {
			return vDaysValues[comboDate.getSelectedIndex()];
		}
		else if (radioCustomDate.isSelected()) {
			try {
				return Integer.parseInt(txtCustomDate.getText());
			} catch (Exception e) {
				return -1;
			}
		}
		return -1;

	}

	private void UpdateControlState() {

		boolean bEnablePredefinedDate = false;
		boolean bEnableCustomDate = false;

		if (radioPredefinedDate.isSelected()) {
			bEnablePredefinedDate = true;
			bEnableCustomDate = false;
		}
		else if (radioCustomDate.isSelected()) {
			bEnablePredefinedDate = false;
			bEnableCustomDate = true;

		}
		else {
			radioPredefinedDate.setSelected(true);
			UpdateControlState();
			return;
		}

		comboDate.setEnabled(bEnablePredefinedDate);
		txtCustomDate.setEnabled(bEnableCustomDate);

		// focus at text field
		if (bEnableCustomDate) {
			txtCustomDate.requestFocus();
			txtCustomDate.selectAll();
		}
		
	}

}
